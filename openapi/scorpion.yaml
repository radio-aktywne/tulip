info:
  title: scorpion
openapi: 3.0.3
paths:
  /.well-known/jwks.json:
    get:
      description: >-
        This endpoint returns JSON Web Keys required to verifying OpenID Connect
        ID Tokens and,

        if enabled, OAuth 2.0 JWT Access Tokens. This endpoint can be used with
        client libraries like

        [node-jwks-rsa](https://github.com/auth0/node-jwks-rsa) among others.


        Adding custom keys requires first creating a keyset via the
        createJsonWebKeySet operation,

        and then configuring the webfinger.jwks.broadcast_keys configuration
        value to include the keyset name.
      operationId: discoverJsonWebKeys
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/jsonWebKeySet"
          description: jsonWebKeySet
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorOAuth2"
          description: errorOAuth2
      summary: Discover Well-Known JSON Web Keys
      tags:
        - wellknown
  /.well-known/openid-configuration:
    get:
      description: >-
        A mechanism for an OpenID Connect Relying Party to discover the
        End-User's OpenID Provider and obtain information needed to interact
        with it, including its OAuth 2.0 endpoint locations.


        Popular libraries for OpenID Connect clients include oidc-client-js
        (JavaScript), go-oidc (Golang), and others.

        For a full list of clients go here: https://openid.net/developers/certified/
      operationId: discoverOidcConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oidcConfiguration"
          description: oidcConfiguration
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorOAuth2"
          description: errorOAuth2
      summary: OpenID Connect Discovery
      tags:
        - oidc
  /oauth2/auth:
    get:
      description: >-
        Use open source libraries to perform OAuth 2.0 and OpenID Connect

        available for any programming language. You can find a list of libraries
        at https://oauth.net/code/


        This endpoint should not be used via the Ory SDK and is only included
        for technical reasons.

        Instead, use one of the libraries linked above.
      operationId: oAuth2Authorize
      responses:
        "302":
          description: >-
            Empty responses are sent when, for example, resources are deleted.
            The HTTP status code for empty responses is

            typically 204.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorOAuth2"
          description: errorOAuth2
      summary: OAuth 2.0 Authorize Endpoint
      tags:
        - oAuth2
  /oauth2/revoke:
    post:
      description: >-
        Revoking a token (both access and refresh) means that the tokens will be
        invalid. A revoked access token can no

        longer be used to make access requests, and a revoked refresh token can
        no longer be used to refresh an access token.

        Revoking a refresh token also invalidates the access token that was
        created with it. A token may only be revoked by

        the client the token was generated for.
      operationId: revokeOAuth2Token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/revokeOAuth2Token_request"
      responses:
        "200":
          description: >-
            Empty responses are sent when, for example, resources are deleted.
            The HTTP status code for empty responses is

            typically 204.
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorOAuth2"
          description: errorOAuth2
      security:
        - basic: []
        - oauth2: []
      summary: Revoke OAuth 2.0 Access or Refresh Token
      tags:
        - oAuth2
  /oauth2/sessions/logout:
    get:
      description: >-
        This endpoint initiates and completes user logout at the Ory OAuth2 &
        OpenID provider and initiates OpenID Connect Front- / Back-channel
        logout:


        https://openid.net/specs/openid-connect-frontchannel-1_0.html

        https://openid.net/specs/openid-connect-backchannel-1_0.html


        Back-channel logout is performed asynchronously and does not affect
        logout flow.
      operationId: revokeOidcSession
      responses:
        "302":
          description: >-
            Empty responses are sent when, for example, resources are deleted.
            The HTTP status code for empty responses is

            typically 204.
      summary: OpenID Connect Front- and Back-channel Enabled Logout
      tags:
        - oidc
  /oauth2/token:
    post:
      description: >-
        Use open source libraries to perform OAuth 2.0 and OpenID Connect

        available for any programming language. You can find a list of libraries
        here https://oauth.net/code/


        This endpoint should not be used via the Ory SDK and is only included
        for technical reasons.

        Instead, use one of the libraries linked above.
      operationId: oauth2TokenExchange
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/oauth2TokenExchange_request"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oAuth2TokenExchange"
          description: oAuth2TokenExchange
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorOAuth2"
          description: errorOAuth2
      security:
        - basic: []
        - oauth2: []
      summary: The OAuth 2.0 Token Endpoint
      tags:
        - oAuth2
  /userinfo:
    get:
      description: >-
        This endpoint returns the payload of the ID Token, including
        `session.id_token` values, of

        the provided OAuth 2.0 Access Token's consent request.


        In the case of authentication error, a WWW-Authenticate header might be
        set in the response

        with more information about the error. See
        [the spec](https://datatracker.ietf.org/doc/html/rfc6750#section-3)

        for more details about header format.
      operationId: getOidcUserInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/oidcUserInfo"
          description: oidcUserInfo
        default:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/errorOAuth2"
          description: errorOAuth2
      security:
        - oauth2: []
      summary: OpenID Connect Userinfo
      tags:
        - oidc
components:
  schemas:
    credentialSupportedDraft00:
      description: >-
        Includes information about the supported verifiable credentials.
      example:
        types:
          - types
          - types
        cryptographic_suites_supported:
          - cryptographic_suites_supported
          - cryptographic_suites_supported
        cryptographic_binding_methods_supported:
          - cryptographic_binding_methods_supported
          - cryptographic_binding_methods_supported
        format: format
      properties:
        cryptographic_binding_methods_supported:
          description: >-
            OpenID Connect Verifiable Credentials Cryptographic Binding Methods
            Supported


            Contains a list of cryptographic binding methods supported for
            signing the proof.
          items:
            type: string
          type: array
        cryptographic_suites_supported:
          description: >-
            OpenID Connect Verifiable Credentials Cryptographic Suites Supported


            Contains a list of cryptographic suites methods supported for
            signing the proof.
          items:
            type: string
          type: array
        format:
          description: >-
            OpenID Connect Verifiable Credentials Format


            Contains the format that is supported by this authorization server.
          type: string
        types:
          description: >-
            OpenID Connect Verifiable Credentials Types


            Contains the types of verifiable credentials supported.
          items:
            type: string
          type: array
      title: Verifiable Credentials Metadata (Draft 00)
      type: object
    errorOAuth2:
      description: Error
      example:
        error_debug: error_debug
        status_code: 401
        error_description: error_description
        error: error
        error_hint: The redirect URL is not allowed.
      properties:
        error:
          description: Error
          type: string
        error_debug:
          description: >-
            Error Debug Information


            Only available in dev mode.
          type: string
        error_description:
          description: Error Description
          type: string
        error_hint:
          description: >-
            Error Hint


            Helps the user identify the error cause.
          example: The redirect URL is not allowed.
          type: string
        status_code:
          description: HTTP Status Code
          example: 401
          format: int64
          type: integer
      type: object
    jsonWebKey:
      example:
        d: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
        e: AQAB
        crv: P-256
        use: sig
        kid: 1603dfe0af8f4596
        x5c:
          - x5c
          - x5c
        k: GawgguFyGrWKav7AX4VKUg
        dp: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
        dq: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
        "n": vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
        p: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
        kty: RSA
        q: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
        qi: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
        x: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
        "y": x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
        alg: RS256
      properties:
        alg:
          description: >-
            The "alg" (algorithm) parameter identifies the algorithm intended
            for

            use with the key.  The values used should either be registered in
            the

            IANA "JSON Web Signature and Encryption Algorithms" registry

            established by [JWA] or be a value that contains a Collision-

            Resistant Name.
          example: RS256
          type: string
        crv:
          example: P-256
          type: string
        d:
          example: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
          type: string
        dp:
          example: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
          type: string
        dq:
          example: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
          type: string
        e:
          example: AQAB
          type: string
        k:
          example: GawgguFyGrWKav7AX4VKUg
          type: string
        kid:
          description: >-
            The "kid" (key ID) parameter is used to match a specific key.  This

            is used, for instance, to choose among a set of keys within a JWK
            Set

            during key rollover.  The structure of the "kid" value is

            unspecified.  When "kid" values are used within a JWK Set, different

            keys within the JWK Set SHOULD use distinct "kid" values.  (One

            example in which different keys might use the same "kid" value is if

            they have different "kty" (key type) values but are considered to be

            equivalent alternatives by the application using them.)  The "kid"

            value is a case-sensitive string.
          example: 1603dfe0af8f4596
          type: string
        kty:
          description: >-
            The "kty" (key type) parameter identifies the cryptographic
            algorithm

            family used with the key, such as "RSA" or "EC". "kty" values should

            either be registered in the IANA "JSON Web Key Types" registry

            established by [JWA] or be a value that contains a Collision-

            Resistant Name.  The "kty" value is a case-sensitive string.
          example: RSA
          type: string
        "n":
          example: vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
          type: string
        p:
          example: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
          type: string
        q:
          example: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
          type: string
        qi:
          example: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
          type: string
        use:
          description: >-
            Use ("public key use") identifies the intended use of

            the public key. The "use" parameter is employed to indicate whether

            a public key is used for encrypting data or verifying the signature

            on data. Values are commonly "sig" (signature) or "enc"
            (encryption).
          example: sig
          type: string
        x:
          example: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
          type: string
        x5c:
          description: >-
            The "x5c" (X.509 certificate chain) parameter contains a chain of
            one

            or more PKIX certificates [RFC5280].  The certificate chain is

            represented as a JSON array of certificate value strings.  Each

            string in the array is a base64-encoded (Section 4 of [RFC4648] --

            not base64url-encoded) DER [ITU.X690.1994] PKIX certificate value.

            The PKIX certificate containing the key value MUST be the first

            certificate.
          items:
            type: string
          type: array
        "y":
          example: x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
          type: string
      required:
        - alg
        - kid
        - kty
        - use
      type: object
    jsonWebKeySet:
      description: JSON Web Key Set
      example:
        keys:
          - d: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
            e: AQAB
            crv: P-256
            use: sig
            kid: 1603dfe0af8f4596
            x5c:
              - x5c
              - x5c
            k: GawgguFyGrWKav7AX4VKUg
            dp: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
            dq: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
            "n": vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
            p: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
            kty: RSA
            q: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
            qi: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
            x: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
            "y": x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
            alg: RS256
          - d: T_N8I-6He3M8a7X1vWt6TGIx4xB_GP3Mb4SsZSA4v-orvJzzRiQhLlRR81naWYxfQAYt5isDI6_C2L9bdWo4FFPjGQFvNoRX-_sBJyBI_rl-TBgsZYoUlAj3J92WmY2inbA-PwyJfsaIIDceYBC-eX-xiCu6qMqkZi3MwQAFL6bMdPEM0z4JBcwFT3VdiWAIRUuACWQwrXMq672x7fMuaIaHi7XDGgt1ith23CLfaREmJku9PQcchbt_uEY-hqrFY6ntTtS4paWWQj86xLL94S-Tf6v6xkL918PfLSOTq6XCzxvlFwzBJqApnAhbwqLjpPhgUG04EDRrqrSBc5Y1BLevn6Ip5h1AhessBp3wLkQgz_roeckt-ybvzKTjESMuagnpqLvOT7Y9veIug2MwPJZI2VjczRc1vzMs25XrFQ8DpUy-bNdp89TmvAXwctUMiJdgHloJw23Cv03gIUAkDnsTqZmkpbIf-crpgNKFmQP_EDKoe8p_PXZZgfbRri3NoEVGP7Mk6yEu8LjJhClhZaBNjuWw2-KlBfOA3g79mhfBnkInee5KO9mGR50qPk1V-MorUYNTFMZIm0kFE6eYVWFBwJHLKYhHU34DoiK1VP-svZpC2uAMFNA_UJEwM9CQ2b8qe4-5e9aywMvwcuArRkAB5mBIfOaOJao3mfukKAE
            e: AQAB
            crv: P-256
            use: sig
            kid: 1603dfe0af8f4596
            x5c:
              - x5c
              - x5c
            k: GawgguFyGrWKav7AX4VKUg
            dp: G4sPXkc6Ya9y8oJW9_ILj4xuppu0lzi_H7VTkS8xj5SdX3coE0oimYwxIi2emTAue0UOa5dpgFGyBJ4c8tQ2VF402XRugKDTP8akYhFo5tAA77Qe_NmtuYZc3C3m3I24G2GvR5sSDxUyAN2zq8Lfn9EUms6rY3Ob8YeiKkTiBj0
            dq: s9lAH9fggBsoFR8Oac2R_E2gw282rT2kGOAhvIllETE1efrA6huUUvMfBcMpn8lqeW6vzznYY5SSQF7pMdC_agI3nG8Ibp1BUb0JUiraRNqUfLhcQb_d9GF4Dh7e74WbRsobRonujTYN1xCaP6TO61jvWrX-L18txXw494Q_cgk
            "n": vTqrxUyQPl_20aqf5kXHwDZrel-KovIp8s7ewJod2EXHl8tWlRB3_Rem34KwBfqlKQGp1nqah-51H4Jzruqe0cFP58hPEIt6WqrvnmJCXxnNuIB53iX_uUUXXHDHBeaPCSRoNJzNysjoJ30TIUsKBiirhBa7f235PXbKiHducLevV6PcKxJ5cY8zO286qJLBWSPm-OIevwqsIsSIH44Qtm9sioFikhkbLwoqwWORGAY0nl6XvVOlhADdLjBSqSAeT1FPuCDCnXwzCDR8N9IFB_IjdStFkC-rVt2K5BYfPd0c3yFp_vHR15eRd0zJ8XQ7woBC8Vnsac6Et1pKS59pX6256DPWu8UDdEOolKAPgcd_g2NpA76cAaF_jcT80j9KrEzw8Tv0nJBGesuCjPNjGs_KzdkWTUXt23Hn9QJsdc1MZuaW0iqXBepHYfYoqNelzVte117t4BwVp0kUM6we0IqyXClaZgOI8S-WDBw2_Ovdm8e5NmhYAblEVoygcX8Y46oH6bKiaCQfKCFDMcRgChme7AoE1yZZYsPbaG_3IjPrC4LBMHQw8rM9dWjJ8ImjicvZ1pAm0dx-KHCP3y5PVKrxBDf1zSOsBRkOSjB8TPODnJMz6-jd5hTtZxpZPwPoIdCanTZ3ZD6uRBpTmDwtpRGm63UQs1m5FWPwb0T2IF0
            p: 6NbkXwDWUhi-eR55Cgbf27FkQDDWIamOaDr0rj1q0f1fFEz1W5A_09YvG09Fiv1AO2-D8Rl8gS1Vkz2i0zCSqnyy8A025XOcRviOMK7nIxE4OH_PEsko8dtIrb3TmE2hUXvCkmzw9EsTF1LQBOGC6iusLTXepIC1x9ukCKFZQvdgtEObQ5kzd9Nhq-cdqmSeMVLoxPLd1blviVT9Vm8-y12CtYpeJHOaIDtVPLlBhJiBoPKWg3vxSm4XxIliNOefqegIlsmTIa3MpS6WWlCK3yHhat0Q-rRxDxdyiVdG_wzJvp0Iw_2wms7pe-PgNPYvUWH9JphWP5K38YqEBiJFXQ
            kty: RSA
            q: 0A1FmpOWR91_RAWpqreWSavNaZb9nXeKiBo0DQGBz32DbqKqQ8S4aBJmbRhJcctjCLjain-ivut477tAUMmzJwVJDDq2MZFwC9Q-4VYZmFU4HJityQuSzHYe64RjN-E_NQ02TWhG3QGW6roq6c57c99rrUsETwJJiwS8M5p15Miuz53DaOjv-uqqFAFfywN5WkxHbraBcjHtMiQuyQbQqkCFh-oanHkwYNeytsNhTu2mQmwR5DR2roZ2nPiFjC6nsdk-A7E3S3wMzYYFw7jvbWWoYWo9vB40_MY2Y0FYQSqcDzcBIcq_0tnnasf3VW4Fdx6m80RzOb2Fsnln7vKXAQ
            qi: GyM_p6JrXySiz1toFgKbWV-JdI3jQ4ypu9rbMWx3rQJBfmt0FoYzgUIZEVFEcOqwemRN81zoDAaa-Bk0KWNGDjJHZDdDmFhW3AN7lI-puxk_mHZGJ11rxyR8O55XLSe3SPmRfKwZI6yU24ZxvQKFYItdldUKGzO6Ia6zTKhAVRU
            x: f83OJ3D2xF1Bg8vub9tLe1gHMzV76e8Tus9uPHvRVEU
            "y": x_FEzRu9m36HLN_tue659LNpXW6pCyStikYjKIWI5a0
            alg: RS256
      properties:
        keys:
          description: >-
            List of JSON Web Keys


            The value of the "keys" parameter is an array of JSON Web Key (JWK)

            values. By default, the order of the JWK values within the array
            does

            not imply an order of preference among them, although applications

            of JWK Sets can choose to assign a meaning to the order for their

            purposes, if desired.
          items:
            $ref: "#/components/schemas/jsonWebKey"
          type: array
      type: object
    oAuth2TokenExchange:
      description: OAuth2 Token Exchange Result
      example:
        access_token: access_token
        refresh_token: refresh_token
        scope: scope
        id_token: id_token
        token_type: token_type
        expires_in: 0
      properties:
        access_token:
          description: The access token issued by the authorization server.
          type: string
        expires_in:
          description: >-
            The lifetime in seconds of the access token. For

            example, the value "3600" denotes that the access token will

            expire in one hour from the time the response was generated.
          format: int64
          type: integer
        id_token:
          description: To retrieve a refresh token request the id_token scope.
          type: string
        refresh_token:
          description: >-
            The refresh token, which can be used to obtain new

            access tokens. To retrieve it add the scope "offline" to your access
            token request.
          type: string
        scope:
          description: The scope of the access token
          type: string
        token_type:
          description: The type of the token issued
          type: string
      type: object
    oidcConfiguration:
      description: >-
        Includes links to several endpoints (for example `/oauth2/token`) and
        exposes information on supported signature algorithms

        among others.
      example:
        request_parameter_supported: true
        claims_parameter_supported: true
        backchannel_logout_supported: true
        scopes_supported:
          - scopes_supported
          - scopes_supported
        issuer: https://playground.ory.sh/ory-hydra/public/
        userinfo_signed_response_alg:
          - userinfo_signed_response_alg
          - userinfo_signed_response_alg
        authorization_endpoint: https://playground.ory.sh/ory-hydra/public/oauth2/auth
        claims_supported:
          - claims_supported
          - claims_supported
        userinfo_signing_alg_values_supported:
          - userinfo_signing_alg_values_supported
          - userinfo_signing_alg_values_supported
        token_endpoint_auth_methods_supported:
          - token_endpoint_auth_methods_supported
          - token_endpoint_auth_methods_supported
        backchannel_logout_session_supported: true
        response_modes_supported:
          - response_modes_supported
          - response_modes_supported
        id_token_signed_response_alg:
          - id_token_signed_response_alg
          - id_token_signed_response_alg
        token_endpoint: https://playground.ory.sh/ory-hydra/public/oauth2/token
        response_types_supported:
          - response_types_supported
          - response_types_supported
        request_uri_parameter_supported: true
        grant_types_supported:
          - grant_types_supported
          - grant_types_supported
        end_session_endpoint: end_session_endpoint
        revocation_endpoint: revocation_endpoint
        userinfo_endpoint: userinfo_endpoint
        frontchannel_logout_supported: true
        require_request_uri_registration: true
        code_challenge_methods_supported:
          - code_challenge_methods_supported
          - code_challenge_methods_supported
        credentials_endpoint_draft_00: credentials_endpoint_draft_00
        frontchannel_logout_session_supported: true
        jwks_uri: "https://{slug}.projects.oryapis.com/.well-known/jwks.json"
        credentials_supported_draft_00:
          - types:
              - types
              - types
            cryptographic_suites_supported:
              - cryptographic_suites_supported
              - cryptographic_suites_supported
            cryptographic_binding_methods_supported:
              - cryptographic_binding_methods_supported
              - cryptographic_binding_methods_supported
            format: format
          - types:
              - types
              - types
            cryptographic_suites_supported:
              - cryptographic_suites_supported
              - cryptographic_suites_supported
            cryptographic_binding_methods_supported:
              - cryptographic_binding_methods_supported
              - cryptographic_binding_methods_supported
            format: format
        subject_types_supported:
          - subject_types_supported
          - subject_types_supported
        id_token_signing_alg_values_supported:
          - id_token_signing_alg_values_supported
          - id_token_signing_alg_values_supported
        registration_endpoint: https://playground.ory.sh/ory-hydra/admin/client
        request_object_signing_alg_values_supported:
          - request_object_signing_alg_values_supported
          - request_object_signing_alg_values_supported
      properties:
        authorization_endpoint:
          description: OAuth 2.0 Authorization Endpoint URL
          example: https://playground.ory.sh/ory-hydra/public/oauth2/auth
          type: string
        backchannel_logout_session_supported:
          description: >-
            OpenID Connect Back-Channel Logout Session Required


            Boolean value specifying whether the OP can pass a sid (session ID)
            Claim in the Logout Token to identify the RP

            session with the OP. If supported, the sid Claim is also included in
            ID Tokens issued by the OP
          type: boolean
        backchannel_logout_supported:
          description: >-
            OpenID Connect Back-Channel Logout Supported


            Boolean value specifying whether the OP supports back-channel
            logout, with true indicating support.
          type: boolean
        claims_parameter_supported:
          description: >-
            OpenID Connect Claims Parameter Parameter Supported


            Boolean value specifying whether the OP supports use of the claims
            parameter, with true indicating support.
          type: boolean
        claims_supported:
          description: >-
            OpenID Connect Supported Claims


            JSON array containing a list of the Claim Names of the Claims that
            the OpenID Provider MAY be able to supply

            values for. Note that for privacy or other reasons, this might not
            be an exhaustive list.
          items:
            type: string
          type: array
        code_challenge_methods_supported:
          description: >-
            OAuth 2.0 PKCE Supported Code Challenge Methods


            JSON array containing a list of Proof Key for Code Exchange (PKCE)
            [RFC7636] code challenge methods supported

            by this authorization server.
          items:
            type: string
          type: array
        credentials_endpoint_draft_00:
          description: >-
            OpenID Connect Verifiable Credentials Endpoint


            Contains the URL of the Verifiable Credentials Endpoint.
          type: string
        credentials_supported_draft_00:
          description: >-
            OpenID Connect Verifiable Credentials Supported


            JSON array containing a list of the Verifiable Credentials supported
            by this authorization server.
          items:
            $ref: "#/components/schemas/credentialSupportedDraft00"
          type: array
        end_session_endpoint:
          description: >-
            OpenID Connect End-Session Endpoint


            URL at the OP to which an RP can perform a redirect to request that
            the End-User be logged out at the OP.
          type: string
        frontchannel_logout_session_supported:
          description: >-
            OpenID Connect Front-Channel Logout Session Required


            Boolean value specifying whether the OP can pass iss (issuer) and
            sid (session ID) query parameters to identify

            the RP session with the OP when the frontchannel_logout_uri is used.
            If supported, the sid Claim is also

            included in ID Tokens issued by the OP.
          type: boolean
        frontchannel_logout_supported:
          description: >-
            OpenID Connect Front-Channel Logout Supported


            Boolean value specifying whether the OP supports HTTP-based logout,
            with true indicating support.
          type: boolean
        grant_types_supported:
          description: >-
            OAuth 2.0 Supported Grant Types


            JSON array containing a list of the OAuth 2.0 Grant Type values that
            this OP supports.
          items:
            type: string
          type: array
        id_token_signed_response_alg:
          description: >-
            OpenID Connect Default ID Token Signing Algorithms


            Algorithm used to sign OpenID Connect ID Tokens.
          items:
            type: string
          type: array
        id_token_signing_alg_values_supported:
          description: >-
            OpenID Connect Supported ID Token Signing Algorithms


            JSON array containing a list of the JWS signing algorithms
            (alg values) supported by the OP for the ID Token

            to encode the Claims in a JWT.
          items:
            type: string
          type: array
        issuer:
          description: >-
            OpenID Connect Issuer URL


            An URL using the https scheme with no query or fragment component
            that the OP asserts as its IssuerURL Identifier.

            If IssuerURL discovery is supported , this value MUST be identical
            to the issuer value returned

            by WebFinger. This also MUST be identical to the iss Claim value in
            ID Tokens issued from this IssuerURL.
          example: https://playground.ory.sh/ory-hydra/public/
          type: string
        jwks_uri:
          description: >-
            OpenID Connect Well-Known JSON Web Keys URL


            URL of the OP's JSON Web Key Set [JWK] document. This contains the
            signing key(s) the RP uses to validate

            signatures from the OP. The JWK Set MAY also contain the Server's
            encryption key(s), which are used by RPs

            to encrypt requests to the Server. When both signing and encryption
            keys are made available, a use (Key Use)

            parameter value is REQUIRED for all keys in the referenced JWK Set
            to indicate each key's intended usage.

            Although some algorithms allow the same key to be used for both
            signatures and encryption, doing so is

            NOT RECOMMENDED, as it is less secure. The JWK x5c parameter MAY be
            used to provide X.509 representations of

            keys provided. When used, the bare key values MUST still be present
            and MUST match those in the certificate.
          example: "https://{slug}.projects.oryapis.com/.well-known/jwks.json"
          type: string
        registration_endpoint:
          description: OpenID Connect Dynamic Client Registration Endpoint URL
          example: https://playground.ory.sh/ory-hydra/admin/client
          type: string
        request_object_signing_alg_values_supported:
          description: >-
            OpenID Connect Supported Request Object Signing Algorithms


            JSON array containing a list of the JWS signing algorithms
            (alg values) supported by the OP for Request Objects,

            which are described in Section 6.1 of OpenID Connect Core 1.0
            [OpenID.Core]. These algorithms are used both when

            the Request Object is passed by value (using the request parameter)
            and when it is passed by reference

            (using the request_uri parameter).
          items:
            type: string
          type: array
        request_parameter_supported:
          description: >-
            OpenID Connect Request Parameter Supported


            Boolean value specifying whether the OP supports use of the request
            parameter, with true indicating support.
          type: boolean
        request_uri_parameter_supported:
          description: >-
            OpenID Connect Request URI Parameter Supported


            Boolean value specifying whether the OP supports use of the
            request_uri parameter, with true indicating support.
          type: boolean
        require_request_uri_registration:
          description: >-
            OpenID Connect Requires Request URI Registration


            Boolean value specifying whether the OP requires any request_uri
            values used to be pre-registered

            using the request_uris registration parameter.
          type: boolean
        response_modes_supported:
          description: >-
            OAuth 2.0 Supported Response Modes


            JSON array containing a list of the OAuth 2.0 response_mode values
            that this OP supports.
          items:
            type: string
          type: array
        response_types_supported:
          description: >-
            OAuth 2.0 Supported Response Types


            JSON array containing a list of the OAuth 2.0 response_type values
            that this OP supports. Dynamic OpenID

            Providers MUST support the code, id_token, and the token id_token
            Response Type values.
          items:
            type: string
          type: array
        revocation_endpoint:
          description: >-
            OAuth 2.0 Token Revocation URL


            URL of the authorization server's OAuth 2.0 revocation endpoint.
          type: string
        scopes_supported:
          description: >-
            OAuth 2.0 Supported Scope Values


            JSON array containing a list of the OAuth 2.0 [RFC6749] scope values
            that this server supports. The server MUST

            support the openid scope value. Servers MAY choose not to advertise
            some supported scope values even when this parameter is used
          items:
            type: string
          type: array
        subject_types_supported:
          description: >-
            OpenID Connect Supported Subject Types


            JSON array containing a list of the Subject Identifier types that
            this OP supports. Valid types include

            pairwise and public.
          items:
            type: string
          type: array
        token_endpoint:
          description: OAuth 2.0 Token Endpoint URL
          example: https://playground.ory.sh/ory-hydra/public/oauth2/token
          type: string
        token_endpoint_auth_methods_supported:
          description: >-
            OAuth 2.0 Supported Client Authentication Methods


            JSON array containing a list of Client Authentication methods
            supported by this Token Endpoint. The options are

            client_secret_post, client_secret_basic, client_secret_jwt, and
            private_key_jwt, as described in Section 9 of OpenID Connect Core
            1.0
          items:
            type: string
          type: array
        userinfo_endpoint:
          description: >-
            OpenID Connect Userinfo URL


            URL of the OP's UserInfo Endpoint.
          type: string
        userinfo_signed_response_alg:
          description: >-
            OpenID Connect User Userinfo Signing Algorithm


            Algorithm used to sign OpenID Connect Userinfo Responses.
          items:
            type: string
          type: array
        userinfo_signing_alg_values_supported:
          description: >-
            OpenID Connect Supported Userinfo Signing Algorithm


            JSON array containing a list of the JWS [JWS] signing algorithms
            (alg values) [JWA] supported by the UserInfo Endpoint to encode
            the Claims in a JWT [JWT].
          items:
            type: string
          type: array
      required:
        - authorization_endpoint
        - id_token_signed_response_alg
        - id_token_signing_alg_values_supported
        - issuer
        - jwks_uri
        - response_types_supported
        - subject_types_supported
        - token_endpoint
        - userinfo_signed_response_alg
      title: OpenID Connect Discovery Metadata
      type: object
    oidcUserInfo:
      description: OpenID Connect Userinfo
      example:
        sub: sub
        website: website
        zoneinfo: zoneinfo
        birthdate: birthdate
        email_verified: true
        gender: gender
        profile: profile
        phone_number_verified: true
        preferred_username: preferred_username
        given_name: given_name
        locale: locale
        middle_name: middle_name
        picture: picture
        updated_at: 0
        name: name
        nickname: nickname
        phone_number: phone_number
        family_name: family_name
        email: email
      properties:
        birthdate:
          description: >-
            End-User's birthday, represented as an ISO 8601:2004 [ISO8601-2004]
            YYYY-MM-DD format. The year MAY be 0000, indicating that it is
            omitted. To represent only the year, YYYY format is allowed. Note
            that depending on the underlying platform's date related function,
            providing just year can result in varying month and day, so the
            implementers need to take this factor into account to correctly
            process the dates.
          type: string
        email:
          description: |-
            End-User's preferred e-mail address. Its value MUST conform to the
            RFC 5322 [RFC5322] addr-spec syntax. The RP MUST NOT rely upon
            this value being unique, as discussed in Section 5.7.
          type: string
        email_verified:
          description: |-
            True if the End-User's e-mail address has been verified; otherwise
            false. When this Claim Value is true, this means that the OP took
            affirmative steps to ensure that this e-mail address was
            controlled by the End-User at the time the verification was
            performed. The means by which an e-mail address is verified is
            context-specific, and dependent upon the trust framework or
            contractual agreements within which the parties are operating.
          type: boolean
        family_name:
          description: |-
            Surname(s) or last name(s) of the End-User. Note that in some
            cultures, people can have multiple family names or no family name;
            all can be present, with the names being separated by space
            characters.
          type: string
        gender:
          description: |-
            End-User's gender. Values defined by this specification are female
            and male. Other values MAY be used when neither of the defined
            values are applicable.
          type: string
        given_name:
          description: |-
            Given name(s) or first name(s) of the End-User. Note that in some
            cultures, people can have multiple given names; all can be
            present, with the names being separated by space characters.
          type: string
        locale:
          description: |-
            End-User's locale, represented as a BCP47 [RFC5646] language tag.
            This is typically an ISO 639-1 Alpha-2 [ISO639-1] language code in
            lowercase and an ISO 3166-1 Alpha-2 [ISO3166-1] country code in
            uppercase, separated by a dash. For example, en-US or fr-CA. As a
            compatibility note, some implementations have used an underscore
            as the separator rather than a dash, for example, en_US; Relying
            Parties MAY choose to accept this locale syntax as well.
          type: string
        middle_name:
          description: |-
            Middle name(s) of the End-User. Note that in some cultures, people
            can have multiple middle names; all can be present, with the names
            being separated by space characters. Also note that in some
            cultures, middle names are not used.
          type: string
        name:
          description: |-
            End-User's full name in displayable form including all name parts,
            possibly including titles and suffixes, ordered according to the
            End-User's locale and preferences.
          type: string
        nickname:
          description: |-
            Casual name of the End-User that may or may not be the same as the
            given_name. For instance, a nickname value of Mike might be
            returned alongside a given_name value of Michael.
          type: string
        phone_number:
          description: |-
            End-User's preferred telephone number. E.164 [E.164] is
            RECOMMENDED as the format of this Claim, for example,
            +1 (425) 555-1212 or +56 (2) 687 2400. If the phone number
            contains an extension, it is RECOMMENDED that the extension be
            represented using the RFC 3966 [RFC3966] extension syntax, for
            example, +1 (604) 555-1234;ext=5678.
          type: string
        phone_number_verified:
          description: |-
            True if the End-User's phone number has been verified; otherwise
            false. When this Claim Value is true, this means that the OP took
            affirmative steps to ensure that this phone number was controlled
            by the End-User at the time the verification was performed. The
            means by which a phone number is verified is context-specific, and
            dependent upon the trust framework or contractual agreements
            within which the parties are operating. When true, the
            phone_number Claim MUST be in E.164 format and any extensions MUST
            be represented in RFC 3966 format.
          type: boolean
        picture:
          description: |-
            URL of the End-User's profile picture. This URL MUST refer to an
            image file (for example, a PNG, JPEG, or GIF image file), rather
            than to a Web page containing an image. Note that this URL SHOULD
            specifically reference a profile photo of the End-User suitable
            for displaying when describing the End-User, rather than an
            arbitrary photo taken by the End-User.
          type: string
        preferred_username:
          description: |-
            Non-unique shorthand name by which the End-User wishes to be
            referred to at the RP, such as janedoe or j.doe. This value MAY be
            any valid JSON string including special characters such as @, /,
            or whitespace.
          type: string
        profile:
          description: |-
            URL of the End-User's profile page. The contents of this Web page
            SHOULD be about the End-User.
          type: string
        sub:
          description: |-
            Subject - Identifier for the End-User at the IssuerURL.
          type: string
        updated_at:
          description: |-
            Time the End-User's information was last updated. Its value is a
            JSON number representing the number of seconds from
            1970-01-01T0:0:0Z as measured in UTC until the date/time.
          format: int64
          type: integer
        website:
          description: |-
            URL of the End-User's Web page or blog. This Web page SHOULD
            contain information published by the End-User or an organization
            that the End-User is affiliated with.
          type: string
        zoneinfo:
          description: |-
            String from zoneinfo [zoneinfo] time zone database representing
            the End-User's time zone. For example, Europe/Paris or
            America/Los_Angeles.
          type: string
      type: object
    revokeOAuth2Token_request:
      properties:
        client_id:
          type: string
          x-formData-name: client_id
        client_secret:
          type: string
          x-formData-name: client_secret
        token:
          required:
            - token
          type: string
          x-formData-name: token
      required:
        - token
      type: object
    oauth2TokenExchange_request:
      properties:
        client_id:
          type: string
          x-formData-name: client_id
        client_secret:
          type: string
          x-formData-name: client_secret
        code:
          type: string
          x-formData-name: code
        grant_type:
          required:
            - grant_type
          type: string
          x-formData-name: grant_type
        redirect_uri:
          type: string
          x-formData-name: redirect_uri
        refresh_token:
          type: string
          x-formData-name: refresh_token
      required:
        - grant_type
      type: object
  securitySchemes:
    basic:
      scheme: basic
      type: http
    oauth2:
      flows:
        authorizationCode:
          authorizationUrl: https://hydra.demo.ory.sh/oauth2/auth
          scopes:
            offline: >-
              A scope required when requesting refresh tokens
              (alias for `offline_access`)
            offline_access: A scope required when requesting refresh tokens
            openid: Request an OpenID Connect ID Token
          tokenUrl: https://hydra.demo.ory.sh/oauth2/token
      type: oauth2
tags:
  - description: OAuth 2.0
    name: oAuth2
  - description: OpenID Connect
    name: oidc
  - description: Well-Known Endpoints
    name: wellknown
