info:
  title: beaver
openapi: 3.1.0
paths:
  /events:
    get:
      summary: List events
      description: List events that match the request.
      operationId: EventsList
      parameters:
        - name: limit
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: integer
                default: 10
            description: Maximum number of events to return.
            default: 10
          description: Maximum number of events to return.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: offset
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: integer
            description: Number of events to skip.
          description: Number of events to skip.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: where
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Filter to apply to find events.
          description: Filter to apply to find events.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: query
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Advanced query to apply to find events.
          description: Advanced query to apply to find events.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include in the response.
          description: Relations to include in the response.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: order
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Order to apply to the results.
          description: Order to apply to the results.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventList"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
    post:
      summary: Create event
      description: Create a new event.
      operationId: EventsCreate
      parameters:
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include in the response.
          description: Relations to include in the response.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventCreateInput"
        required: true
      responses:
        "201":
          description: Document created, URL follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/events_models_Event"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
  /events/{id}:
    get:
      summary: Get event
      description: Get an event by ID.
      operationId: EventsIdGet
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
            description: Identifier of the event to get.
          description: Identifier of the event to get.
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include in the response.
          description: Relations to include in the response.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/events_models_Event"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
    delete:
      summary: Delete event
      description: Delete an event by ID.
      operationId: EventsIdDelete
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
            description: Identifier of the event to delete.
          description: Identifier of the event to delete.
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "204":
          description: Request fulfilled, nothing follows
          headers: {}
          content:
            application/json:
              schema:
                type: "null"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
    patch:
      summary: Update event
      description: Update an event by ID.
      operationId: EventsIdUpdate
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
            description: Identifier of the event to update.
          description: Identifier of the event to update.
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include in the response.
          description: Relations to include in the response.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventUpdateInput"
        required: true
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/events_models_Event"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
  /ping:
    get:
      summary: Ping
      description: Ping.
      operationId: PingPing
      responses:
        "204":
          description: Request fulfilled, nothing follows
          headers:
            cache-control:
              schema:
                type: string
              required: false
              deprecated: false
              allowEmptyValue: false
              allowReserved: false
          content:
            application/json:
              schema:
                type: "null"
      deprecated: false
    head:
      summary: Ping headers
      description: Ping headers.
      operationId: PingHeadping
      responses:
        "204":
          description: Request fulfilled, nothing follows
          headers:
            cache-control:
              schema:
                type: string
              required: false
              deprecated: false
              allowEmptyValue: false
              allowReserved: false
          content:
            application/json:
              schema:
                type: "null"
      deprecated: false
  /schedule:
    get:
      summary: List schedules
      description: List event schedules with instances between two dates.
      operationId: ScheduleList
      parameters:
        - name: start
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Start time in UTC to filter events instances.
          description: Start time in UTC to filter events instances.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: end
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: End time in UTC to filter events instances.
          description: End time in UTC to filter events instances.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: limit
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: integer
                default: 10
            description: Maximum number of schedules to return.
            default: 10
          description: Maximum number of schedules to return.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: offset
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: integer
            description: Number of schedules to skip.
          description: Number of schedules to skip.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: where
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Filter to apply to find events.
          description: Filter to apply to find events.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include in the response.
          description: Relations to include in the response.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: order
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Order to apply to the results.
          description: Order to apply to the results.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleList"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
  /shows:
    get:
      summary: List shows
      description: List shows that match the request.
      operationId: ShowsList
      parameters:
        - name: limit
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: integer
                default: 10
            description: Maximum number of shows to return.
            default: 10
          description: Maximum number of shows to return.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: offset
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: integer
            description: Number of shows to skip.
          description: Number of shows to skip.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: where
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Filter to apply to find shows.
          description: Filter to apply to find shows.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include in the response.
          description: Relations to include in the response.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: order
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Order to apply to the results.
          description: Order to apply to the results.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShowList"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
    post:
      summary: Create show
      description: Create a new show.
      operationId: ShowsCreate
      parameters:
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include in the response.
          description: Relations to include in the response.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShowCreateInput"
        required: true
      responses:
        "201":
          description: Document created, URL follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shows_models_Show"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
  /shows/{id}:
    get:
      summary: Get show
      description: Get a show by ID.
      operationId: ShowsIdGet
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
            description: Identifier of the show to get.
          description: Identifier of the show to get.
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include in the response.
          description: Relations to include in the response.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shows_models_Show"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
    delete:
      summary: Delete show
      description: Delete a show by ID.
      operationId: ShowsIdDelete
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
            description: Identifier of the show to delete.
          description: Identifier of the show to delete.
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        "204":
          description: Request fulfilled, nothing follows
          headers: {}
          content:
            application/json:
              schema:
                type: "null"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
    patch:
      summary: Update show
      description: Update a show by ID.
      operationId: ShowsIdUpdate
      parameters:
        - name: id
          in: path
          schema:
            type: string
            format: uuid
            description: Identifier of the show to update.
          description: Identifier of the show to update.
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: include
          in: query
          schema:
            oneOf:
              - type: "null"
              - type: string
            description: Relations to include in the response.
          description: Relations to include in the response.
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShowUpdateInput"
        required: true
      responses:
        "200":
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/shows_models_Show"
        "400":
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - "null"
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
  /sse:
    get:
      summary: Get SSE stream
      description: Get a stream of Server-Sent Events.
      operationId: SseSubscribe
      responses:
        "200":
          description: Request fulfilled, document follows
          headers:
            content-length:
              schema:
                type: string
              description: File size in bytes
              required: false
              deprecated: false
              allowEmptyValue: false
              allowReserved: false
            last-modified:
              schema:
                type: string
                format: date-time
              description: Last modified data-time in RFC 2822 format
              required: false
              deprecated: false
              allowEmptyValue: false
              allowReserved: false
            etag:
              schema:
                type: string
              description: Entity tag
              required: false
              deprecated: false
              allowEmptyValue: false
              allowReserved: false
          content:
            "":
              schema:
                type: string
                contentMediaType: application/octet-stream
      deprecated: false
components:
  schemas:
    EventCreateInput:
      properties:
        id:
          type: string
        showId:
          type: string
        type:
          type: string
          enum:
            - live
            - replay
            - prerecorded
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        timezone:
          type: string
        recurrence:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/events_models_Recurrence"
      type: object
      required:
        - end
        - start
        - timezone
        - type
      title: EventCreateInput
      description: Data to create an event.
    EventInstance:
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
      type: object
      required:
        - end
        - start
      title: EventInstance
    EventList:
      properties:
        count:
          type: integer
          description: Total number of events that matched the query.
        limit:
          oneOf:
            - type: "null"
            - type: integer
          description: Maximum number of returned events.
        offset:
          oneOf:
            - type: "null"
            - type: integer
          description: Number of events skipped.
        events:
          items:
            $ref: "#/components/schemas/events_models_Event"
          type: array
          description: Events that matched the request.
      type: object
      required:
        - count
        - events
      title: EventList
    EventUpdateInput:
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - live
            - replay
            - prerecorded
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        timezone:
          type: string
        recurrence:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/events_models_Recurrence"
      type: object
      required: []
      title: EventUpdateInput
      description: Data to update an event.
    Schedule:
      properties:
        event:
          $ref: "#/components/schemas/schedule_models_Event"
        instances:
          items:
            $ref: "#/components/schemas/EventInstance"
          type: array
          description: Event instances.
      type: object
      required:
        - event
        - instances
      title: Schedule
    ScheduleList:
      properties:
        count:
          type: integer
          description: Total number of schedules that matched the query.
        limit:
          oneOf:
            - type: "null"
            - type: integer
          description: Maximum number of returned schedules.
        offset:
          oneOf:
            - type: "null"
            - type: integer
          description: Number of schedules skipped.
        schedules:
          items:
            $ref: "#/components/schemas/Schedule"
          type: array
          description: Schedules that matched the request.
      type: object
      required:
        - count
        - schedules
      title: ScheduleList
    ShowCreateInput:
      properties:
        id:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        title:
          type: string
      type: object
      required:
        - title
      title: ShowCreateInput
      description: Data to create a show.
    ShowList:
      properties:
        count:
          type: integer
          description: Total number of shows that matched the query.
        limit:
          oneOf:
            - type: "null"
            - type: integer
          description: Maximum number of returned shows.
        offset:
          oneOf:
            - type: "null"
            - type: integer
          description: Number of shows skipped.
        shows:
          items:
            $ref: "#/components/schemas/shows_models_Show"
          type: array
          description: Shows that matched the request.
      type: object
      required:
        - count
        - shows
      title: ShowList
    ShowUpdateInput:
      properties:
        id:
          type: string
        title:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
      type: object
      required: []
      title: ShowUpdateInput
      description: Data to update a show.
    events_models_Event:
      properties:
        id:
          type: string
          format: uuid
          description: Identifier of the event.
        type:
          type: string
          enum:
            - live
            - replay
            - prerecorded
          description: Type of the event.
        showId:
          type: string
          format: uuid
          description: Identifier of the show that the event belongs to.
        show:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/events_models_Show"
          description: Show that the event belongs to.
        start:
          type: string
          format: date-time
          description: Start time of the event in event timezone.
        end:
          type: string
          format: date-time
          description: End time of the event in event timezone.
        timezone:
          type: string
          description: Timezone of the event.
        recurrence:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/events_models_Recurrence"
          description: Recurrence rule of the event.
      type: object
      required:
        - end
        - id
        - showId
        - start
        - timezone
        - type
      title: Event
    events_models_Recurrence:
      properties:
        rule:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/events_models_RecurrenceRule"
          description: Rule of the recurrence.
        include:
          oneOf:
            - type: "null"
            - items:
                type: string
                format: date-time
              type: array
          description: Included dates of the recurrence in event timezone.
        exclude:
          oneOf:
            - type: "null"
            - items:
                type: string
                format: date-time
              type: array
          description: Excluded dates of the recurrence in event timezone.
      type: object
      required: []
      title: Recurrence
    events_models_RecurrenceRule:
      properties:
        frequency:
          type: string
          enum:
            - secondly
            - minutely
            - hourly
            - daily
            - weekly
            - monthly
            - yearly
          description: Frequency of the recurrence.
        until:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
          description: End date of the recurrence in UTC.
        count:
          oneOf:
            - type: "null"
            - type: integer
          description: Number of occurrences of the recurrence.
        interval:
          oneOf:
            - type: "null"
            - type: integer
          description: Interval of the recurrence.
        bySeconds:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Seconds of the recurrence.
        byMinutes:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Minutes of the recurrence.
        byHours:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Hours of the recurrence.
        byWeekdays:
          oneOf:
            - type: "null"
            - items:
                $ref: "#/components/schemas/events_models_WeekdayRule"
              type: array
          description: Weekdays of the recurrence.
        byMonthdays:
          oneOf:
            - type: "null"
            - items:
                oneOf:
                  - type: integer
                  - type: integer
              type: array
          description: Monthdays of the recurrence.
        byYeardays:
          oneOf:
            - type: "null"
            - items:
                oneOf:
                  - type: integer
                  - type: integer
              type: array
          description: Yeardays of the recurrence.
        byWeeks:
          oneOf:
            - type: "null"
            - items:
                oneOf:
                  - type: integer
                  - type: integer
              type: array
          description: Weeks of the recurrence.
        byMonths:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Months of the recurrence.
        bySetPositions:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Set positions of the recurrence.
        weekStart:
          type:
            - "null"
            - string
          enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
            - null
          description: Start day of the week.
      type: object
      required:
        - frequency
      title: RecurrenceRule
    events_models_Show:
      properties:
        id:
          type: string
          description: Identifier of the show.
        title:
          type: string
          description: Title of the show.
        description:
          oneOf:
            - type: "null"
            - type: string
          description: Description of the show.
        events:
          oneOf:
            - type: "null"
            - items:
                $ref: "#/components/schemas/events_models_Event"
              type: array
          description: Events that the show belongs to.
      type: object
      required:
        - id
        - title
      title: Show
    events_models_WeekdayRule:
      properties:
        day:
          type: string
          enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
          description: Day of the week.
        occurrence:
          oneOf:
            - type: "null"
            - type: integer
            - type: integer
          description: Occurrence of the day in the year.
      type: object
      required:
        - day
      title: WeekdayRule
    schedule_models_Event:
      properties:
        id:
          type: string
          format: uuid
          description: Identifier of the event.
        type:
          type: string
          enum:
            - live
            - replay
            - prerecorded
          description: Type of the event.
        showId:
          type: string
          format: uuid
          description: Identifier of the show that the event belongs to.
        show:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/schedule_models_Show"
          description: Show that the event belongs to.
        start:
          type: string
          format: date-time
          description: Start time of the event in event timezone.
        end:
          type: string
          format: date-time
          description: End time of the event in event timezone.
        timezone:
          type: string
          description: Timezone of the event.
        recurrence:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/schedule_models_Recurrence"
          description: Recurrence rule of the event.
      type: object
      required:
        - end
        - id
        - showId
        - start
        - timezone
        - type
      title: Event
      description: Event data.
    schedule_models_Recurrence:
      properties:
        rule:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/schedule_models_RecurrenceRule"
          description: Rule of the recurrence.
        include:
          oneOf:
            - type: "null"
            - items:
                type: string
                format: date-time
              type: array
          description: Included dates of the recurrence in event timezone.
        exclude:
          oneOf:
            - type: "null"
            - items:
                type: string
                format: date-time
              type: array
          description: Excluded dates of the recurrence in event timezone.
      type: object
      required: []
      title: Recurrence
    schedule_models_RecurrenceRule:
      properties:
        frequency:
          type: string
          enum:
            - secondly
            - minutely
            - hourly
            - daily
            - weekly
            - monthly
            - yearly
          description: Frequency of the recurrence.
        until:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
          description: End date of the recurrence in UTC.
        count:
          oneOf:
            - type: "null"
            - type: integer
          description: Number of occurrences of the recurrence.
        interval:
          oneOf:
            - type: "null"
            - type: integer
          description: Interval of the recurrence.
        bySeconds:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Seconds of the recurrence.
        byMinutes:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Minutes of the recurrence.
        byHours:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Hours of the recurrence.
        byWeekdays:
          oneOf:
            - type: "null"
            - items:
                $ref: "#/components/schemas/schedule_models_WeekdayRule"
              type: array
          description: Weekdays of the recurrence.
        byMonthdays:
          oneOf:
            - type: "null"
            - items:
                oneOf:
                  - type: integer
                  - type: integer
              type: array
          description: Monthdays of the recurrence.
        byYeardays:
          oneOf:
            - type: "null"
            - items:
                oneOf:
                  - type: integer
                  - type: integer
              type: array
          description: Yeardays of the recurrence.
        byWeeks:
          oneOf:
            - type: "null"
            - items:
                oneOf:
                  - type: integer
                  - type: integer
              type: array
          description: Weeks of the recurrence.
        byMonths:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Months of the recurrence.
        bySetPositions:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Set positions of the recurrence.
        weekStart:
          type:
            - "null"
            - string
          enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
            - null
          description: Start day of the week.
      type: object
      required:
        - frequency
      title: RecurrenceRule
    schedule_models_Show:
      properties:
        id:
          type: string
          description: Identifier of the show.
        title:
          type: string
          description: Title of the show.
        description:
          oneOf:
            - type: "null"
            - type: string
          description: Description of the show.
        events:
          oneOf:
            - type: "null"
            - items:
                $ref: "#/components/schemas/schedule_models_Event"
              type: array
          description: Events that the show belongs to.
      type: object
      required:
        - id
        - title
      title: Show
    schedule_models_WeekdayRule:
      properties:
        day:
          type: string
          enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
          description: Day of the week.
        occurrence:
          oneOf:
            - type: "null"
            - type: integer
            - type: integer
          description: Occurrence of the day in the year.
      type: object
      required:
        - day
      title: WeekdayRule
    shows_models_Event:
      properties:
        id:
          type: string
          format: uuid
          description: Identifier of the event.
        type:
          type: string
          enum:
            - live
            - replay
            - prerecorded
          description: Type of the event.
        showId:
          type: string
          format: uuid
          description: Identifier of the show that the event belongs to.
        show:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/shows_models_Show"
          description: Show that the event belongs to.
        start:
          type: string
          format: date-time
          description: Start time of the event in event timezone.
        end:
          type: string
          format: date-time
          description: End time of the event in event timezone.
        timezone:
          type: string
          description: Timezone of the event.
        recurrence:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/shows_models_Recurrence"
          description: Recurrence rule of the event.
      type: object
      required:
        - end
        - id
        - showId
        - start
        - timezone
        - type
      title: Event
    shows_models_Recurrence:
      properties:
        rule:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/shows_models_RecurrenceRule"
          description: Rule of the recurrence.
        include:
          oneOf:
            - type: "null"
            - items:
                type: string
                format: date-time
              type: array
          description: Included dates of the recurrence in event timezone.
        exclude:
          oneOf:
            - type: "null"
            - items:
                type: string
                format: date-time
              type: array
          description: Excluded dates of the recurrence in event timezone.
      type: object
      required: []
      title: Recurrence
    shows_models_RecurrenceRule:
      properties:
        frequency:
          type: string
          enum:
            - secondly
            - minutely
            - hourly
            - daily
            - weekly
            - monthly
            - yearly
          description: Frequency of the recurrence.
        until:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
          description: End date of the recurrence in UTC.
        count:
          oneOf:
            - type: "null"
            - type: integer
          description: Number of occurrences of the recurrence.
        interval:
          oneOf:
            - type: "null"
            - type: integer
          description: Interval of the recurrence.
        bySeconds:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Seconds of the recurrence.
        byMinutes:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Minutes of the recurrence.
        byHours:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Hours of the recurrence.
        byWeekdays:
          oneOf:
            - type: "null"
            - items:
                $ref: "#/components/schemas/shows_models_WeekdayRule"
              type: array
          description: Weekdays of the recurrence.
        byMonthdays:
          oneOf:
            - type: "null"
            - items:
                oneOf:
                  - type: integer
                  - type: integer
              type: array
          description: Monthdays of the recurrence.
        byYeardays:
          oneOf:
            - type: "null"
            - items:
                oneOf:
                  - type: integer
                  - type: integer
              type: array
          description: Yeardays of the recurrence.
        byWeeks:
          oneOf:
            - type: "null"
            - items:
                oneOf:
                  - type: integer
                  - type: integer
              type: array
          description: Weeks of the recurrence.
        byMonths:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Months of the recurrence.
        bySetPositions:
          oneOf:
            - type: "null"
            - items:
                type: integer
              type: array
          description: Set positions of the recurrence.
        weekStart:
          type:
            - "null"
            - string
          enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
            - null
          description: Start day of the week.
      type: object
      required:
        - frequency
      title: RecurrenceRule
    shows_models_Show:
      properties:
        id:
          type: string
          description: Identifier of the show.
        title:
          type: string
          description: Title of the show.
        description:
          oneOf:
            - type: "null"
            - type: string
          description: Description of the show.
        events:
          oneOf:
            - type: "null"
            - items:
                $ref: "#/components/schemas/shows_models_Event"
              type: array
          description: Events that the show belongs to.
      type: object
      required:
        - id
        - title
      title: Show
    shows_models_WeekdayRule:
      properties:
        day:
          type: string
          enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
          description: Day of the week.
        occurrence:
          oneOf:
            - type: "null"
            - type: integer
            - type: integer
          description: Occurrence of the day in the year.
      type: object
      required:
        - day
      title: WeekdayRule
